@model HR.MVC.DHK.Models.Employee

@{
    ViewData["Title"] = "Create Employee";
}

<h2>Create Employee</h2>

@using (Html.BeginForm("Create", "Employee", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.EmpCode, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EmpCode, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmpCode, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EmpName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.EmpName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.EmpName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="Gender">Gender:</label>
        <div class="col-md-4">
            <div class="radio">
                <label>
                    <input type="radio" id="Gender" name="Gender" value="Male" @* @(Model.Gender == "Male" ? "checked" : "") *@ /> Male
                </label>
            </div>
            <div class="radio">
                <label>
                    <input type="radio" id="Gender" name="Gender" value="Female" @* @(Model.Gender == "Female" ? "checked" : "") *@ /> Female
                </label>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dtJoin, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.dtJoin, new { @class = "form-control", type = "date" })
            @Html.ValidationMessageFor(model => model.dtJoin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gross, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Gross, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gross, "", new { @class = "text-danger" })
        </div>
    </div>


    <!-- Other form fields -->

    <div class="form-group">
        <label for="ComId">Company:</label>
        @Html.DropDownListFor(model => model.ComId, new SelectList(ViewBag.CompanyList, "ComId", "ComName"), "Select Company", new { @class = "form-control", id = "companySelect" })
        @Html.ValidationMessageFor(model => model.ComId, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeptId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DeptId, Enumerable.Empty<SelectListItem>(), "-- Select Department --", new { @class = "form-control", id = "departmentSelect" })
            @Html.ValidationMessageFor(model => model.DeptId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DesigId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.DesigId, Enumerable.Empty<SelectListItem>(), "-- Select Designation --", new { @class = "form-control", id = "designationSelect" })
            @Html.ValidationMessageFor(model => model.DesigId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ShiftId, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ShiftId, Enumerable.Empty<SelectListItem>(), "-- Select Shift --", new { @class = "form-control", id = "shiftSelect" })
            @Html.ValidationMessageFor(model => model.ShiftId, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Other form fields -->

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap/dist/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            // Function to load departments based on selected company
            function loadDepartments(companyId) {
                $.ajax({
                    url: '@Url.Action("GetDepartments", "Department")',
                    type: 'GET',
                    data: { companyId: companyId },
                    success: function (data) {
                        var departmentSelect = $('#departmentSelect');
                        departmentSelect.empty();
                        departmentSelect.append($('<option/>').val('').text('-- Select Department --'));
                        $.each(data, function (index, item) {
                            departmentSelect.append($('<option/>').val(item.deptId).text(item.deptName));
                        });
                    },
                    error: function () {
                        alert('Failed to retrieve departments.');
                    }
                });
            }

            // Function to load designations based on selected department
            function loadDesignations(companyId, departmentId) {
                $.ajax({
                    url: '@Url.Action("GetDesignations", "Designation")',
                    type: 'GET',
                    data: { companyId: companyId, departmentId: departmentId },
                    success: function (data) {
                        var designationSelect = $('#designationSelect');
                        designationSelect.empty();
                        designationSelect.append($('<option/>').val('').text('-- Select Designation --'));
                        $.each(data, function (index, item) {
                            designationSelect.append($('<option/>').val(item.desigId).text(item.desigName));
                        });
                    },
                    error: function () {
                        alert('Failed to retrieve designations.');
                    }
                });
            }

            // Function to load shifts based on selected company
            function loadShifts(companyId) {
                $.ajax({
                    url: '@Url.Action("GetShifts", "Shift")',
                    type: 'GET',
                    data: { companyId: companyId },
                    success: function (data) {
                        var shiftSelect = $('#shiftSelect');
                        shiftSelect.empty();
                        shiftSelect.append($('<option/>').val('').text('-- Select Shift --'));
                        $.each(data, function (index, item) {
                            shiftSelect.append($('<option/>').val(item.shiftId).text(item.shiftName));
                        });
                    },
                    error: function () {
                        alert('Failed to retrieve shifts.');
                    }
                });
            }

            // Event handler for company select change
            $('#companySelect').change(function () {
                var companyId = $(this).val();
                if (companyId) {
                    loadDepartments(companyId);
                    loadShifts(companyId); // Load shifts based on the selected company
                } else {
                    $('#departmentSelect').empty();
                    $('#designationSelect').empty();
                    $('#shiftSelect').empty();
                }
            });

            // Event handler for department select change
            $('#departmentSelect').change(function () {
                var companyId = $('#companySelect').val();
                var departmentId = $(this).val();
                if (departmentId) {
                    loadDesignations(companyId, departmentId); // Load designations based on the selected department
                } else {
                    $('#designationSelect').empty();
                }
            });
        });
    </script>
}
