// <auto-generated />
using System;
using HR.MVC.DHK.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HR.MVC.DHK.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230624120346_guidgen")]
    partial class guidgen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HR.MVC.DHK.Models.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AttStatus")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DtDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeEmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan?>("InTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("OutTime")
                        .IsRequired()
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("CompanyComId");

                    b.HasIndex("EmpId", "ComId");

                    b.HasIndex("EmployeeEmpId", "EmployeeComId");

                    b.HasIndex("ComId", "EmpId", "DtDate")
                        .IsUnique();

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.AttendanceSummary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int?>("Absent")
                        .HasColumnType("int");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DtMonth")
                        .HasColumnType("int");

                    b.Property<int>("DtYear")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeEmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Late")
                        .HasColumnType("int");

                    b.Property<int?>("Present")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyComId");

                    b.HasIndex("EmpId", "ComId");

                    b.HasIndex("EmployeeEmpId", "EmployeeComId");

                    b.HasIndex("ComId", "EmpId", "DtYear", "DtMonth")
                        .IsUnique();

                    b.ToTable("AttendanceSummary");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Company", b =>
                {
                    b.Property<Guid>("ComId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ComName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Hrent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsInactive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Medical")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ComId");

                    b.HasIndex("ComName")
                        .IsUnique();

                    b.ToTable("Company");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Department", b =>
                {
                    b.Property<Guid>("DeptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DeptId", "ComId");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptName")
                        .IsUnique();

                    b.ToTable("Department");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Designation", b =>
                {
                    b.Property<Guid>("DesigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DesigName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("DesigId", "ComId");

                    b.HasIndex("ComId");

                    b.HasIndex("DesigName")
                        .IsUnique();

                    b.ToTable("Designation");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Employee", b =>
                {
                    b.Property<Guid>("EmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("DeptId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DesigId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("HRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Medical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Others")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ShiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("dtJoin")
                        .HasColumnType("datetime2");

                    b.HasKey("EmpId", "ComId");

                    b.HasIndex("ComId");

                    b.HasIndex("DeptId", "ComId");

                    b.HasIndex("DesigId", "ComId");

                    b.HasIndex("ShiftId", "ComId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<decimal>("AbsentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Basic")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DtMonth")
                        .HasColumnType("int");

                    b.Property<int>("DtYear")
                        .HasColumnType("int");

                    b.Property<Guid>("EmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeEmpId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Hrent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<decimal>("Medical")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PayableAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyComId");

                    b.HasIndex("EmpId", "ComId");

                    b.HasIndex("EmployeeEmpId", "EmployeeComId");

                    b.HasIndex("ComId", "EmpId", "DtYear", "DtMonth")
                        .IsUnique();

                    b.ToTable("Salary");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Shift", b =>
                {
                    b.Property<Guid>("ShiftId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ShiftIn")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftLate")
                        .HasColumnType("time");

                    b.Property<string>("ShiftName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<TimeSpan>("ShiftOut")
                        .HasColumnType("time");

                    b.HasKey("ShiftId", "ComId");

                    b.HasIndex("ComId");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Attendance", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Company", null)
                        .WithMany("Attendances")
                        .HasForeignKey("CompanyComId");

                    b.HasOne("HR.MVC.DHK.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId", "ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Employee", null)
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeEmpId", "EmployeeComId");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.AttendanceSummary", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Company", null)
                        .WithMany("AttendanceSummaries")
                        .HasForeignKey("CompanyComId");

                    b.HasOne("HR.MVC.DHK.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId", "ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Employee", null)
                        .WithMany("AttendanceSummaries")
                        .HasForeignKey("EmployeeEmpId", "EmployeeComId");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Department", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Designation", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany("Designations")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Employee", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DeptId", "ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Designation", "Designation")
                        .WithMany("Employees")
                        .HasForeignKey("DesigId", "ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Shift", "Shift")
                        .WithMany("Employees")
                        .HasForeignKey("ShiftId", "ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Department");

                    b.Navigation("Designation");

                    b.Navigation("Shift");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Salary", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Company", null)
                        .WithMany("Salaries")
                        .HasForeignKey("CompanyComId");

                    b.HasOne("HR.MVC.DHK.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId", "ComId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("HR.MVC.DHK.Models.Employee", null)
                        .WithMany("Salaries")
                        .HasForeignKey("EmployeeEmpId", "EmployeeComId");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Shift", b =>
                {
                    b.HasOne("HR.MVC.DHK.Models.Company", "Company")
                        .WithMany("Shifts")
                        .HasForeignKey("ComId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Company", b =>
                {
                    b.Navigation("AttendanceSummaries");

                    b.Navigation("Attendances");

                    b.Navigation("Departments");

                    b.Navigation("Designations");

                    b.Navigation("Employees");

                    b.Navigation("Salaries");

                    b.Navigation("Shifts");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Designation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Employee", b =>
                {
                    b.Navigation("AttendanceSummaries");

                    b.Navigation("Attendances");

                    b.Navigation("Salaries");
                });

            modelBuilder.Entity("HR.MVC.DHK.Models.Shift", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
